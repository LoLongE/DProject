package com.polarisoffice.support.wp.account;

import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.charset.Charset;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import org.apache.commons.codec.binary.Base64;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.http.HttpHeaders;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.rest.webmvc.BasePathAwareController;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.polarisoffice.support.wp.account.domain.User;
import com.polarisoffice.support.wp.account.domain.UserDept;

import kr.co.infraware.polaris.annotation.RequestLog;
import kr.co.infraware.polaris.config.common.WebDefine;
import kr.co.infraware.polaris.controller.APIResponse;
import kr.co.infraware.polaris.controller.AuthedAPIController;
import kr.co.infraware.polaris.controller.drive.request.EventRequest;
import kr.co.infraware.polaris.controller.drive.request.ListRequest;
import kr.co.infraware.polaris.controller.drive.request.SyncRequest;
import kr.co.infraware.polaris.controller.drive.response.SyncResponse;
import kr.co.infraware.polaris.domain.dto.drive.PolarisFileDTO;
import kr.co.infraware.polaris.domain.enumtype.EventType;
import kr.co.infraware.polaris.domain.enumtype.common.ResultEnum;
import kr.co.infraware.polaris.domain.security.session.AuthedSessionInfo;
import kr.co.infraware.polaris.service.drive.DriveService;
import kr.co.infraware.polaris.service.drive.DriveServiceDelegator;
import kr.co.infraware.polaris.test.api.util.APITestListResponse;
import kr.co.infraware.polaris.test.api.util.APITestResponse;
import kr.co.infraware.polaris.test.api.util.apihelper.APIHelper;
import kr.co.infraware.polaris.util.ServletHelper;
import kr.co.infraware.polaris.utils.PolicyUtils;
import kr.co.infraware.polaris.utils.json.JSONObject;

@BasePathAwareController
public class AccountController {

	protected Log logger = LogFactory.getLog( getClass() );

	private @Autowired AccountService accountService;

	@RequestMapping(value="/accountByEmpno", method={RequestMethod.GET, RequestMethod.POST, RequestMethod.OPTIONS} )
	public @ResponseBody AccountResponse accountByEmpno(@RequestParam("empno") String empno)throws Exception{
		return accountService.accountByEmpno(empno);
	}
	
	@CrossOrigin( origins = "*" )
	@RequestMapping( value = "/authcheck", method = {
			RequestMethod.POST
	} )
	public @ResponseBody AccountAuthCheckResponse checkAccountAuth2( @RequestBody final AccountAuthCheckRequest data ) throws Exception {
		return this.accountService.checkAccountAuth( data.getId(), data.getPw() );
	}
	
	@RequestMapping(value="/member/task/{direct_org}", method={RequestMethod.GET, RequestMethod.POST, RequestMethod.OPTIONS} )
	public @ResponseBody List<UserDept> getTeamByUserSeqd(@PathVariable("direct_org") String direct_org) throws Exception{
		return accountService.getUsersByTeamSeq(direct_org);
	}
	
	@RequestMapping(value="/member/user/{org_cd}", method={RequestMethod.GET, RequestMethod.POST, RequestMethod.OPTIONS} )
	public @ResponseBody List<User> getUsersByOrgCd(@PathVariable("org_cd") String org_cd) throws Exception{
		return accountService.getUsersByOrgCode(org_cd);
	}
	
	@RequestMapping(value="/member/alluser/{org_cd}", method={RequestMethod.GET, RequestMethod.POST, RequestMethod.OPTIONS} )
	public @ResponseBody List<User> getAllUsersByOrgCd(@PathVariable("org_cd") String org_cd) throws Exception{
		return accountService.getAllUsersByOrgCode(org_cd);
	}
	
	@RequestMapping(value="/member/searchuser/{name}", method={RequestMethod.GET, RequestMethod.POST, RequestMethod.OPTIONS} )
	public @ResponseBody List<User> getSearchUserByName(@PathVariable("name") String name) throws Exception{		
		return accountService.getSearchUserByName(name);
	}
	
	@RequestMapping( value = "/member/getuser/{empno}", method = {
			RequestMethod.GET, RequestMethod.POST, RequestMethod.OPTIONS
	} )
	public @ResponseBody User getUserByEmpNo( @PathVariable( "empno" ) final String empno ) throws Exception {
		return this.accountService.getUserByEmpNo( empno );
	}
	
	
	//Test API
	@RequestMapping(value ="/OAuth/Download/{file_id}", method= {RequestMethod.GET, RequestMethod.POST, RequestMethod.OPTIONS})
	public @ResponseBody String getID (@PathVariable("file_id") String file_id) throws Exception {
		return null;
	}
	/*
	@RequestMapping("/api/1/drive")
	public class DriveController extends AuthedAPIController {

		DriveService driveService;
		
		@Autowired
		DriveServiceDelegator driveServiceDelegator;

		@Autowired
		public void init( final DriveService driveService ) {
			this.driveService = driveService;
		}

	}
	*/
	//Test API
}
